import { TJSON } from '@interface/common';
import {
  TconfigProps,
  TFacetecSdk,
  TinitializeFromAutogeneratedConfigCallback,
} from './@types';

import faceTecStrings from './FaceTecStrings.json';
import ocrLocalizationJSON from './FaceTec_OCR_Customization.json';

export class Config {
  DeviceKeyIdentifier: string;
  BaseURL: string;
  PublicFaceScanEncryptionKey: string;
  currentLowLightCustomization: TJSON;
  currentDynamicDimmingCustomization: TJSON;

  constructor(props: TconfigProps) {
    this.DeviceKeyIdentifier = props.DeviceKeyIdentifier;
    this.BaseURL = props.BaseURL;
    this.PublicFaceScanEncryptionKey = props.PublicFaceScanEncryptionKey;
  }

  initializeFromAutogeneratedConfig(
    sdk: TFacetecSdk,
    callback: TinitializeFromAutogeneratedConfigCallback
  ) {
    sdk.initializeInDevelopmentMode(
      this.DeviceKeyIdentifier,
      this.PublicFaceScanEncryptionKey,
      callback
    );
    sdk.configureLocalization(faceTecStrings);
    sdk.configureOCRLocalization(ocrLocalizationJSON);
    // this.retrieveConfigurationWizardCustomization(sdk);
  }

  retrieveConfigurationWizardCustomization(sdk: TFacetecSdk) {
    const sdkImageDirectory = '/facetec/images/';

    // For Color Customization
    var outerBackgroundColor = '#ffffff';
    var frameColor = '#ffffff';
    var borderColor = '#417FB2';
    var ovalColor = '#417FB2';
    var dualSpinnerColor = '#417FB2';
    var textColor = '#417FB2';
    var buttonAndFeedbackBarColor = '#417FB2';
    var buttonAndFeedbackBarTextColor = '#ffffff';
    var buttonColorHighlight = '#396E99';
    var buttonColorDisabled = '#B9CCDE';

    // For Frame Corner Radius Customization
    let frameCornerRadius = '20px';

    // For Cancel Button Customization
    var cancelButtonImage = sdkImageDirectory + 'FaceTec_cancel.png';
    var cancelButtonLocation = sdk.FaceTecCancelButtonLocation.TopLeft;

    // For image Customization
    var yourAppLogoImage = sdkImageDirectory + 'logo.svg';
    var securityWatermarkImage = sdk.FaceTecSecurityWatermarkImage.FaceTec_ZoOm;

    // Set a default customization
    var defaultCustomization = new sdk.FaceTecCustomization();

    // Set Frame Customization
    defaultCustomization.frameCustomization.borderCornerRadius =
      frameCornerRadius;
    defaultCustomization.frameCustomization.backgroundColor = frameColor;
    defaultCustomization.frameCustomization.borderColor = borderColor;

    // Set Overlay Customization
    defaultCustomization.overlayCustomization.brandingImage = yourAppLogoImage;
    defaultCustomization.overlayCustomization.backgroundColor =
      outerBackgroundColor;

    // Set Guidance Customization
    defaultCustomization.guidanceCustomization.backgroundColors = frameColor;
    defaultCustomization.guidanceCustomization.foregroundColor = textColor;
    defaultCustomization.guidanceCustomization.buttonBackgroundNormalColor =
      buttonAndFeedbackBarColor;
    defaultCustomization.guidanceCustomization.buttonBackgroundDisabledColor =
      buttonColorDisabled;
    defaultCustomization.guidanceCustomization.buttonBackgroundHighlightColor =
      buttonColorHighlight;
    defaultCustomization.guidanceCustomization.buttonTextNormalColor =
      buttonAndFeedbackBarTextColor;
    defaultCustomization.guidanceCustomization.buttonTextDisabledColor =
      buttonAndFeedbackBarTextColor;
    defaultCustomization.guidanceCustomization.buttonTextHighlightColor =
      buttonAndFeedbackBarTextColor;
    defaultCustomization.guidanceCustomization.retryScreenImageBorderColor =
      borderColor;
    defaultCustomization.guidanceCustomization.retryScreenOvalStrokeColor =
      borderColor;

    // Set Oval Customization
    defaultCustomization.ovalCustomization.strokeColor = ovalColor;
    defaultCustomization.ovalCustomization.progressColor1 = dualSpinnerColor;
    defaultCustomization.ovalCustomization.progressColor2 = dualSpinnerColor;

    // Set Feedback Customization
    defaultCustomization.feedbackCustomization.backgroundColor =
      buttonAndFeedbackBarColor;
    defaultCustomization.feedbackCustomization.textColor =
      buttonAndFeedbackBarTextColor;

    // Set Cancel Customization
    defaultCustomization.cancelButtonCustomization.customImage =
      cancelButtonImage;
    defaultCustomization.cancelButtonCustomization.location =
      cancelButtonLocation;

    // Set Security Watermark Customization
    defaultCustomization.securityWatermarkCustomization.setSecurityWatermarkImage(
      securityWatermarkImage
    );

    // Set Result Screen Customization
    defaultCustomization.resultScreenCustomization.backgroundColors =
      frameColor;
    defaultCustomization.resultScreenCustomization.foregroundColor = textColor;
    defaultCustomization.resultScreenCustomization.activityIndicatorColor =
      buttonAndFeedbackBarColor;
    defaultCustomization.resultScreenCustomization.resultAnimationBackgroundColor =
      buttonAndFeedbackBarColor;
    defaultCustomization.resultScreenCustomization.resultAnimationForegroundColor =
      buttonAndFeedbackBarTextColor;
    defaultCustomization.resultScreenCustomization.uploadProgressFillColor =
      buttonAndFeedbackBarColor;

    // Set ID Scan Customization
    defaultCustomization.idScanCustomization.selectionScreenBackgroundColors =
      frameColor;
    defaultCustomization.idScanCustomization.selectionScreenForegroundColor =
      textColor;
    defaultCustomization.idScanCustomization.reviewScreenBackgroundColors =
      frameColor;
    defaultCustomization.idScanCustomization.reviewScreenForegroundColor =
      buttonAndFeedbackBarTextColor;
    defaultCustomization.idScanCustomization.reviewScreenTextBackgroundColor =
      buttonAndFeedbackBarColor;
    defaultCustomization.idScanCustomization.captureScreenForegroundColor =
      buttonAndFeedbackBarTextColor;
    defaultCustomization.idScanCustomization.captureScreenTextBackgroundColor =
      buttonAndFeedbackBarColor;
    defaultCustomization.idScanCustomization.buttonBackgroundNormalColor =
      buttonAndFeedbackBarColor;
    defaultCustomization.idScanCustomization.buttonBackgroundDisabledColor =
      buttonColorDisabled;
    defaultCustomization.idScanCustomization.buttonBackgroundHighlightColor =
      buttonColorHighlight;
    defaultCustomization.idScanCustomization.buttonTextNormalColor =
      buttonAndFeedbackBarTextColor;
    defaultCustomization.idScanCustomization.buttonTextDisabledColor =
      buttonAndFeedbackBarTextColor;
    defaultCustomization.idScanCustomization.buttonTextHighlightColor =
      buttonAndFeedbackBarTextColor;
    defaultCustomization.idScanCustomization.captureScreenBackgroundColor =
      frameColor;
    defaultCustomization.idScanCustomization.captureFrameStrokeColor =
      borderColor;

    // Set Initial Loading Customization
    defaultCustomization.initialLoadingAnimationCustomization.backgroundColor =
      buttonAndFeedbackBarTextColor;
    defaultCustomization.initialLoadingAnimationCustomization.foregroundColor =
      buttonAndFeedbackBarColor;

    return defaultCustomization;
  }

  retrieveLowLightConfigurationWizardCustomization(sdk: TFacetecSdk) {
    const defaultCustomization =
      this.retrieveConfigurationWizardCustomization(sdk);
    this.currentLowLightCustomization = defaultCustomization;

    return defaultCustomization;
  }

  retrieveDynamicDimmingConfigurationWizardCustomization(sdk: TFacetecSdk) {
    const defaultCustomization =
      this.retrieveConfigurationWizardCustomization(sdk);
    this.currentDynamicDimmingCustomization = defaultCustomization;

    return defaultCustomization;
  }
}
