const App = (function () {
  var latestEnrollmentIdentifier = '';
  var latestProcessor;
  var latestSessionResult = null;
  var latestIDScanResult = null;

  window.onload = function () {
    // AppUtilities.formatUIForDevice();
    FaceTecSDK.setResourceDirectory('/facetec/resources');
    FaceTecSDK.setImagesDirectory('/facetec/images');
    ThemeHelpers.setAppTheme(ThemeHelpers.getCurrentTheme());
    Config.initializeFromAutogeneratedConfig(
      FaceTecSDK,
      function (initializedSuccessfully) {
        if (initializedSuccessfully) {
          AppUtilities.enableControlButtons();
          AppUtilities.setVocalGuidanceSoundFiles();
          // AppUtilities.setOCRLocalization();
          AdditionalScreens.setServerUpgradeStyling(
            document.getElementById('controls'),
            exitAdditionalScreen
          );
        }

        AppUtilities.displayStatus(
          FaceTecSDK.getFriendlyDescriptionForFaceTecSDKStatus(
            FaceTecSDK.getStatus()
          )
        );
      }
    );
  };

  function onEnrollUserPressed() {
    AppUtilities.fadeOutMainUIAndPrepareForSession();

    getSessionToken(function (sessionToken) {
      latestEnrollmentIdentifier =
        'browser_sample_app_' + AppUtilities.generateUUId();
      latestProcessor = new EnrollmentProcessor(sessionToken, App);
    });
  }

  function onPhotoIDMatchPressed() {
    AppUtilities.fadeOutMainUIAndPrepareForSession();

    getSessionToken(function (sessionToken) {
      latestEnrollmentIdentifier =
        'browser_sample_app_' + AppUtilities.generateUUId();
      latestProcessor = new PhotoIDMatchProcessor(sessionToken, App);
    });
  }

  function onComplete(
    sessionResult,
    idScanResult,
    latestNetworkResponseStatus
  ) {
    latestSessionResult = sessionResult;
    latestIDScanResult = idScanResult;

    console.log(latestSessionResult);
    console.log(latestIDScanResult);
    showAdditionalScreensServerIsDown();

    if (latestProcessor.isSuccess()) {
      AppUtilities.displayStatus('Success');
    } else {
      if (
        isNetworkResponseServerIsOffline(latestNetworkResponseStatus) === true
      ) {
        showAdditionalScreensServerIsDown();

        return;
      }
    }

    AppUtilities.showMainUI();
  }

  function isNetworkResponseServerIsOffline(networkResponseStatus) {
    return networkResponseStatus >= 500;
  }

  function onVocalGuidanceSettingsButtonPressed() {
    AppUtilities.setVocalGuidanceMode();
  }

  function onViewAuditTrailPressed() {
    AppUtilities.showAuditTrailImages(latestSessionResult, latestIDScanResult);
  }

  function getSessionToken(sessionTokenCallback) {
    var sessionTokenErrorHasBeenHandled = false;
    var XHR = new XMLHttpRequest();
    XHR.open('GET', Config.BaseURL + '/session-token');
    XHR.setRequestHeader('X-Device-Key', Config.DeviceKeyIdentifier);
    XHR.setRequestHeader(
      'X-User-Agent',
      FaceTecSDK.createFaceTecAPIUserAgentString('')
    );
    XHR.onreadystatechange = function () {
      if (this.readyState === XMLHttpRequest.DONE) {
        var sessionToken = '';
        try {
          sessionToken = JSON.parse(this.responseText).sessionToken;
          if (typeof sessionToken !== 'string') {
            if (sessionTokenErrorHasBeenHandled === false) {
              sessionTokenErrorHasBeenHandled = true;
              if (isNetworkResponseServerIsOffline(XHR.status)) {
                showAdditionalScreensServerIsDown();
              } else {
                onServerSessionTokenError();
              }
            }

            return;
          }
        } catch (_a) {
          if (sessionTokenErrorHasBeenHandled === false) {
            sessionTokenErrorHasBeenHandled = true;
            if (isNetworkResponseServerIsOffline(XHR.status)) {
              showAdditionalScreensServerIsDown();
            } else {
              onServerSessionTokenError();
            }
          }

          return;
        }
        AppUtilities.hideLoadingSessionToken();
        sessionTokenCallback(sessionToken);
      }
    };

    window.setTimeout(function () {
      if (XHR.readyState !== XMLHttpRequest.DONE) {
        AppUtilities.showLoadingSessionToken();
      }
    }, 3000);
    XHR.onerror = function () {
      if (sessionTokenErrorHasBeenHandled === false) {
        sessionTokenErrorHasBeenHandled = true;
        if (isNetworkResponseServerIsOffline(XHR.status)) {
          showAdditionalScreensServerIsDown();
        } else {
          onServerSessionTokenError();
        }
      }
    };
    XHR.send();
  }

  function showAdditionalScreensServerIsDown() {
    AdditionalScreens.showServerUpGradeView();
  }

  function onServerSessionTokenError() {
    AppUtilities.handleErrorGettingServerSessionToken();
  }

  function getLatestEnrollmentIdentifier() {
    return latestEnrollmentIdentifier;
  }

  function clearLatestEnrollmentIdentifier() {
    latestEnrollmentIdentifier = '';
  }

  function exitAdditionalScreen() {
    AdditionalScreens.exitAdditionalScreen(AppUtilities.showMainUI);
  }

  return {
    onEnrollUserPressed,
    onPhotoIDMatchPressed,
    onComplete,
    getLatestEnrollmentIdentifier,
    clearLatestEnrollmentIdentifier,
    onVocalGuidanceSettingsButtonPressed,
    onViewAuditTrailPressed,
    latestSessionResult,
    latestIDScanResult,
  };
})();
